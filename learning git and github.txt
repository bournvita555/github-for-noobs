Git
•	Git is a version control system. Git manages version of the code. Basically git commit "records changes to the repository." It will take snapshots automatically.
•	In order to first start using git, you have to be in git repository. Which is like git directory.
•	Status command checks for current status of git.
•	To start checking for changes to the file type git init which will initialize tracking process.
•	To start tracking the file you want, type in git add [filename] / or you can do git add . to add all files in the current directory.
•	To write some comment/message to this commit, type git commit -m “[message]”
•	Git log will show all the commits.




GitHub
First to communicate your computer to your github, generate SSH key and put it in under Settings of GitHub. (https://www.youtube.com/watch?v=OUdmg8oJVPs)

1. To generate ssh public/private key pair cd into your github directory and type
  ssh-keygen -t rsa -b 4096 -C "your@email.com" //ok the email part turned out to be comment
2. It will prompt you to enter the name of the file you want to save the key into (windows only behavior?)
   I gave it a name test.txt
3.  Now it will prompt for passphrase twice
4. After doing this I got the message
  "You identification has been saved in test.txt"
  "Public key has been saved in test.txt.pub"

Then create a new repository at GitHub and on the homepage of this repository, click on clone or download.

Copy the SSH key and passphrase so that code in local machine and one at GitHub can communicate to each other.

In windows you get your ssh public/private key saved inside your clone path for me it was "C:\Users\dale\Documents\GitHub" infact once you click on gitshell you are already set
- To add private key type ssh-add text.txt it will prompt for the passphrase (windows specific, for mac you might have to type in full path ~/.ssh/id_rsa)
  It will say identity added (test.txt)
  To test I typed
    ssh -T git@github.com
  It gave me the message
  "Warning: Permanently added 'github.com,192.30.252.129' (RSA) to the list of known hosts."
  "Hi bournvita555! You've successfully authenticated, but GitHub does not provide shell access."
  - In order to get rid of the Warning message I had to open .ssh folder by opening cmd and typing "cd .ssh" then "start ."
  - There I made a file named config and inserted the line "UserKnownHostsFile ~/.ssh/known_hosts"
  To quote "http://stackoverflow.com/questions/9299651/git-says-warning-permanently-added-to-the-list-of-known-hosts" here
  "You will then see the message the next time you access Github, but after that you'll not see it anymore as the host is added to the known_hosts file.
  This actually fixes the issue, rather than just hiding the log message."
  And it went exactly as told.

Type git remote -v to list all the remote repositories. To add the remote repository, type git remote add origin [ssh key from GitHub account]

After you have added it, type git pull origin master to pull remote repository to local machine and type git push origin master to push the project to github.


#Git command lines

Cloning
Cloning a github repo is eqivalent to downloading repo from github server into your local machine
For that click on clone or download button in your github repo and copy the repo link which looks like this https://github.com/bournvita555/github-for-noobs2.git
type in
    git clone https://github.com/bournvita555/github-for-noobs2.git

#cd into the repo and typing "atom ." will open up atom with currently focused directory and list of files.

Status
Git Status shows you the status of git
type in
  git status

Add
Git Add is to add the files that are changed



To create new repo in command line
1. type
git init //cd into folder which you want to be a git repo into and do this
git add "nameoffileyouwanttoadd.extension"
git commit -m "writecommenthere"
git remote add origin git@github.com:githubaccountname/githubreponame.git
git remote add origin git@github.com:bournvita555/abc.git
git push -u origin master

git add . //will add every thing
git commit is taking a snapshot of that very momment (in your local machine) ?
git remote add origin... is about linking git local directory with github server repo hence remote
# To check git remote origin URL
  type git remote show origin
git push //will push our changes to github repo 

Changing a remote's URL
git remote set-url origin git@github.com:USERNAME/OTHERREPOSITORY.git

//My mistake "I tried to push repo before creating it back in github, don't do that. It won't work. "

How can I view any local commits I've made, that haven't yet been pushed to the remote repository?

git log origin/master..HEAD
git log --stat origin/master..HEAD

You can also view the diff using the same syntax

git diff origin/master..HEAD

//To add and commit at the same time 
git commit -a -m "comment"

//To create a new branch 
git checkout -b crazy-idea //crazy-idea is the name of new branch
//git checkout means switch branch and -b means new branch
git branch //will shows you all the branches in your local system 
//To switch back to master 
git checkout master


This is jpt text makes no sense at all I don't like it. In fact I hate it. 

// To push the local branch crazy-idea to github
git push --set-upstream origin crazy-idea 
//To pull the branch crazy-idea into master branch click "Compare and pull request" button in github website. 
//after that click on confirm merge button 
//then delete the branch crazy-idea because everything in it has been merged to master by clicking "delete branch" button in github.
//but branch crazy-idea still remains in our local system to delete it we do 
1. first switch to master branch 
git checkout master 
2. now delete the branch crazy-idea
git branch --delete crazy-idea 
